/***********************************************************************************
          _ _            _   _       _   _           
    /\   | | |          | \ | |     | | (_)          
   /  \  | | |_ ___ _ __|  \| | __ _| |_ ___   _____ 
  / /\ \ | | __/ _ \ '__| . ` |/ _` | __| \ \ / / _ \
 / ____ \| | ||  __/ |  | |\  | (_| | |_| |\ V /  __/
/_/    \_\_|\__\___|_|  |_| \_|\__,_|\__|_| \_/ \___|
-----------------------------------------------------

This code has been generated by AlterNative translator

Permission is hereby granted, free of charge, to any person obtaining a copy of this
code.

   contact: alejandro.albala@upc.edu
   web: http://alexalbala.github.io/Alter-Native/
   github: https://github.com/AlexAlbala/Alter-Native
   
AlterNative @ 2014

***********************************************************************************/

#include "Program.h"
namespace SimpleEvent {
	void Program::Main(Array<String>* args){
		Program* p = new Program();
		p->Run();
	}
	void Program::Run()
	{
		SimpleEventClass* se = new SimpleEventClass();
		Console::WriteLine(new String("Created event"));
		se->simpleEvent += new SimpleEventClass::SimpleEventHandler(DELEGATE_FUNC(Program::se_simpleEvent, _1, _2));
		Console::WriteLine(new String("Subscribed"));
		Console::WriteLine(new String("I will fire 10 events just now !"));
		se->Start();
	}
	void Program::se_simpleEvent(int a, float b)
	{
		Console::WriteLine(new String("Event fired"));
		Console::WriteLine(a);
		Console::WriteLine(b);
	}

}
