/***********************************************************************************
          _ _            _   _       _   _           
    /\   | | |          | \ | |     | | (_)          
   /  \  | | |_ ___ _ __|  \| | __ _| |_ ___   _____ 
  / /\ \ | | __/ _ \ '__| . ` |/ _` | __| \ \ / / _ \
 / ____ \| | ||  __/ |  | |\  | (_| | |_| |\ V /  __/
/_/    \_\_|\__\___|_|  |_| \_|\__,_|\__|_| \_/ \___|
-----------------------------------------------------

This code has been generated by AlterNative translator

Permission is hereby granted, free of charge, to any person obtaining a copy of this
code.

   contact: alejandro.albala@upc.edu
   web: http://alexalbala.github.io/Alter-Native/
   github: https://github.com/AlexAlbala/Alter-Native
   
AlterNative @ 2014

***********************************************************************************/

#pragma once
#include <System/System.h>
#include "IA.h"
#include "IB.h"
#include "IC.h"
#include <System/Console.h>

using namespace System;
namespace NestedClasses {
	class C : public virtual IC, public virtual Object
	{
		public:
			int f();

		//START Explicit interface: _interface_IA ****************
		public:
		class _interface_IA : public virtual IA{
			private:
			void f(){
				Console::WriteLine(new String("a"));
			}
		};
		private:
			_interface_IA __interface_ia;
		public:
			operator IA*();
		//END Explicit interface *********************


		//START Explicit interface: _interface_IB ****************
		public:
		class _interface_IB : public virtual IB{
			private:
			void f(){
				Console::WriteLine(new String("b"));
			}
		};
		private:
			_interface_IB __interface_ib;
		public:
			operator IB*();
		//END Explicit interface *********************

	};
}
